#!/bin/sh

if [ $1 = clean ]
then
  rm -rf work vsim.wlf transcript
  exit
fi

if [ $1 ]
then
  option=$1
else
echo ""
echo " Usage: run_questa <list_of_sequences>"
echo ""
echo " List of sequences must be separated by commas and contain no whitespace."
echo ""
echo "    run_questa uvm_ral_built_in_seq,mem_init_from_file_seq"
echo ""
echo " Available sequences:"
echo ""
echo " Built-Ins:"
echo ""
echo "    uvm_ral_hw_reset_seq"
echo "    uvm_ral_reg_access_seq"
echo "    uvm_ral_mem_access_seq"
echo "    uvm_ral_bit_bash_seq"
echo "    uvm_ral_mem_walk_seq"
echo "    uvm_ral_access_seq     runs both uvm_ral_reg_access_seq and uvm_ral_mem_access_seq"
echo "    uvm_ral_built_in_seq   runs all the built-in tests"
echo ""
echo " User-defined:"
echo ""
echo "    mem_init_from_file_seq"
echo "    mem_rand_init_seq"
echo "    user_acp_reg_seq"
echo "    virtual_seq"
echo ""
exit
fi

VSIM_ARGS="-novopt -c -sv_lib ../../../../lib/Linux_x86_64/libuvm_questa xbus_ral_tb_top"

vlib work
vlog -f compile_questa.f

vsim $VSIM_ARGS -do "run -all; q" +VIRTUAL_SEQ +UVM_SEQUENCE=$option +UVM_TESTNAME=cmd_line_seq_test
