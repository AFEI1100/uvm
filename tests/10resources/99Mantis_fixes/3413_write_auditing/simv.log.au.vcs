
UVM_INFO FILE-LINE @ 30: reporter [UVM/RESOURCE/DUMP]
=== resource pool ===
 default_sequence [/^uvm_test_top\.env\.seqr\.shutdown_phase$/] : (class uvm_pkg::uvm_object_wrapper) '{type_name:"myseq", me:{ ref to class uvm_object_registry#(top.myseq,"myseq")}}
UVM_INFO FILE-LINE @ 30: reporter [UVM/RESOURCE/ACCESSOR] uvm_test_top.env.seqr reads: 0 @ 0  writes: 1 @ 0
 default_sequence [/^uvm_test_top\.env\.seqr\.main_phase$/] : (class uvm_pkg::uvm_object_wrapper) '{type_name:"myseq", me:{ ref to class uvm_object_registry#(top.myseq,"myseq")}}
UVM_INFO FILE-LINE @ 30: reporter [UVM/RESOURCE/ACCESSOR] uvm_test_top.env.seqr reads: 0 @ 0  writes: 1 @ 0
 default_sequence [/^uvm_test_top\.env\.seqr\.configure_phase$/] : (class uvm_pkg::uvm_object_wrapper) '{type_name:"myseq", me:{ ref to class uvm_object_registry#(top.myseq,"myseq")}}
UVM_INFO FILE-LINE @ 30: reporter [UVM/RESOURCE/ACCESSOR] uvm_test_top.env.seqr reads: 0 @ 0  writes: 1 @ 0
 default_sequence [/^uvm_test_top\.env\.seqr\.reset_phase$/] : (class uvm_pkg::uvm_object_wrapper) '{type_name:"myseq", me:{ ref to class uvm_object_registry#(top.myseq,"myseq")}}
UVM_INFO FILE-LINE @ 30: reporter [UVM/RESOURCE/ACCESSOR] uvm_test_top.env.seqr reads: 0 @ 0  writes: 1 @ 0
 default_sequence [/^uvm_test_top\.env\.seqr\.shutdown_phase$/] : (class uvm_pkg::uvm_sequence_base) '{use_uvm_seeding:'h1, m_leaf_name:"shut_seq", m_inst_id:X, m_inst_count:X, __m_uvm_status_container:{ ref to class uvm_status_container}, uvm_global_copy_map:'{}, events:{ ref to class uvm_object_string_pool#(uvm_pkg::uvm_event)}, begin_event:{ ref to class uvm_event#(uvm_pkg::uvm_object)}, end_event:{ ref to class uvm_event#(uvm_pkg::uvm_object)}, m_transaction_id:-1, begin_time:20, end_time:30, accept_time:18446744073709551615, initiator:null, stream_handle:null, tr_recorder:null, m_sequence_id:3, m_use_sequence_info:'h1, m_depth:-1, m_sequencer:{ ref to class uvm_sequencer_base}, m_parent_sequence:null, issued1:'h0, issued2:'h0, print_sequence_info:'h1, m_sequence_state:UVM_FINISHED, m_next_transaction_id:1, m_priority:100, m_tr_recorder:null, m_wait_for_grant_semaphore:0, m_sqr_seq_ids:'{0x1:3} , children_array:'{}, response_queue:'{}, response_queue_depth:8, response_queue_error_report_enabled:'h0, do_not_randomize:'h0, m_sequence_process:{ ref to class process}, m_use_response_handler:'h0, type_name:"uvm_sequence_base", is_rel_default:'h0, wait_rel_default:'h0, m_automatic_phase_objection_dap:{ ref to class uvm_get_to_lock_dap#(bit)}, m_starting_phase_dap:{ ref to class uvm_get_to_lock_dap#(uvm_pkg::uvm_phase)}, seq_kind:'h0, param_sequencer:null, req:null, rsp:null, type_name:"myseq2"}
UVM_INFO FILE-LINE @ 30: reporter [UVM/RESOURCE/ACCESSOR] uvm_test_top.env reads: 0 @ 0  writes: 1 @ 0
uvm_test_top.env.seqr reads: 1 @ 20  writes: 0 @ 0
 default_sequence [/^uvm_test_top\.env\.seqr\.configure_phase$/] : (class uvm_pkg::uvm_sequence_base) '{use_uvm_seeding:'h1, m_leaf_name:"cfg_seq", m_inst_id:X, m_inst_count:X, __m_uvm_status_container:{ ref to class uvm_status_container}, uvm_global_copy_map:'{}, events:{ ref to class uvm_object_string_pool#(uvm_pkg::uvm_event)}, begin_event:{ ref to class uvm_event#(uvm_pkg::uvm_object)}, end_event:{ ref to class uvm_event#(uvm_pkg::uvm_object)}, m_transaction_id:-1, begin_time:18446744073709551615, end_time:18446744073709551615, accept_time:18446744073709551615, initiator:null, stream_handle:null, tr_recorder:null, m_sequence_id:-1, m_use_sequence_info:'h0, m_depth:-1, m_sequencer:null, m_parent_sequence:null, issued1:'h0, issued2:'h0, print_sequence_info:'h0, m_sequence_state:UVM_CREATED, m_next_transaction_id:1, m_priority:-1, m_tr_recorder:null, m_wait_for_grant_semaphore:0, m_sqr_seq_ids:'{}, children_array:'{}, response_queue:'{}, response_queue_depth:8, response_queue_error_report_enabled:'h0, do_not_randomize:'h0, m_sequence_process:null, m_use_response_handler:'h0, type_name:"uvm_sequence_base", is_rel_default:'h0, wait_rel_default:'h0, m_automatic_phase_objection_dap:{ ref to class uvm_get_to_lock_dap#(bit)}, m_starting_phase_dap:{ ref to class uvm_get_to_lock_dap#(uvm_pkg::uvm_phase)}, seq_kind:'h0, param_sequencer:null, req:null, rsp:null, type_name:"myseq2"}
UVM_INFO FILE-LINE @ 30: reporter [UVM/RESOURCE/ACCESSOR] uvm_test_top.env reads: 0 @ 0  writes: 1 @ 0
 default_sequence [/^uvm_test_top\.env\.seqr\.reset_phase$/] : (class uvm_pkg::uvm_sequence_base) '{use_uvm_seeding:'h1, m_leaf_name:"rst_seq", m_inst_id:X, m_inst_count:X, __m_uvm_status_container:{ ref to class uvm_status_container}, uvm_global_copy_map:'{}, events:{ ref to class uvm_object_string_pool#(uvm_pkg::uvm_event)}, begin_event:{ ref to class uvm_event#(uvm_pkg::uvm_object)}, end_event:{ ref to class uvm_event#(uvm_pkg::uvm_object)}, m_transaction_id:-1, begin_time:0, end_time:10, accept_time:18446744073709551615, initiator:null, stream_handle:null, tr_recorder:null, m_sequence_id:1, m_use_sequence_info:'h1, m_depth:-1, m_sequencer:{ ref to class uvm_sequencer_base}, m_parent_sequence:null, issued1:'h0, issued2:'h0, print_sequence_info:'h1, m_sequence_state:UVM_FINISHED, m_next_transaction_id:1, m_priority:100, m_tr_recorder:null, m_wait_for_grant_semaphore:0, m_sqr_seq_ids:'{0x1:1} , children_array:'{}, response_queue:'{}, response_queue_depth:8, response_queue_error_report_enabled:'h0, do_not_randomize:'h0, m_sequence_process:{ ref to class process}, m_use_response_handler:'h0, type_name:"uvm_sequence_base", is_rel_default:'h0, wait_rel_default:'h0, m_automatic_phase_objection_dap:{ ref to class uvm_get_to_lock_dap#(bit)}, m_starting_phase_dap:{ ref to class uvm_get_to_lock_dap#(uvm_pkg::uvm_phase)}, seq_kind:'h0, param_sequencer:null, req:null, rsp:null, type_name:"myseq2"}
UVM_INFO FILE-LINE @ 30: reporter [UVM/RESOURCE/ACCESSOR] uvm_test_top.env reads: 0 @ 0  writes: 1 @ 0
uvm_test_top.env.seqr reads: 1 @ 0  writes: 0 @ 0
 default_sequence [/^uvm_test_top\.env\.seqr\.shutdown_phase$/] : (class uvm_pkg::uvm_object_wrapper) '{type_name:"myseq2", me:{ ref to class uvm_object_registry#(top.myseq2,"myseq2")}}
UVM_INFO FILE-LINE @ 30: reporter [UVM/RESOURCE/ACCESSOR] uvm_test_top.env reads: 0 @ 0  writes: 1 @ 0
 default_sequence [/^uvm_test_top\.env\.seqr\.main_phase$/] : (class uvm_pkg::uvm_object_wrapper) '{type_name:"myseq2", me:{ ref to class uvm_object_registry#(top.myseq2,"myseq2")}}
UVM_INFO FILE-LINE @ 30: reporter [UVM/RESOURCE/ACCESSOR] uvm_test_top.env reads: 0 @ 0  writes: 1 @ 0
uvm_test_top.env.seqr reads: 1 @ 10  writes: 0 @ 0
 default_sequence [/^uvm_test_top\.env\.seqr\.configure_phase$/] : (class uvm_pkg::uvm_object_wrapper) '{type_name:"myseq2", me:{ ref to class uvm_object_registry#(top.myseq2,"myseq2")}}
UVM_INFO FILE-LINE @ 30: reporter [UVM/RESOURCE/ACCESSOR] uvm_test_top.env reads: 0 @ 0  writes: 1 @ 0
 default_sequence [/^uvm_test_top\.env\.seqr\.reset_phase$/] : (class uvm_pkg::uvm_object_wrapper) '{type_name:"myseq2", me:{ ref to class uvm_object_registry#(top.myseq2,"myseq2")}}
UVM_INFO FILE-LINE @ 30: reporter [UVM/RESOURCE/ACCESSOR] uvm_test_top.env reads: 0 @ 0  writes: 1 @ 0
 default_sequence [/^uvm_test_top\.env\.seqr\.configure_phase$/] : (class uvm_pkg::uvm_object_wrapper) null
UVM_INFO FILE-LINE @ 30: reporter [UVM/RESOURCE/ACCESSOR] uvm_test_top.env.seqr reads: 1 @ 10  writes: 0 @ 0
UVM_INFO FILE-LINE @ 30: reporter [UVM/RESOURCE/DUMP] === end of resource pool ===
