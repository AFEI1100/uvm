eval 'exec perl -S $0 ${1+"$@"}' 
if 0;

##---------------------------------------------------------------------- 
##   Copyright 2010 Synopsys, Inc. 
##   All Rights Reserved Worldwide 
## 
##   Licensed under the Apache License, Version 2.0 (the 
##   "License"); you may not use this file except in 
##   compliance with the License.  You may obtain a copy of 
##   the License at 
## 
##       http://www.apache.org/licenses/LICENSE-2.0 
## 
##   Unless required by applicable law or agreed to in 
##   writing, software distributed under the License is 
##   distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR 
##   CONDITIONS OF ANY KIND, either express or implied.  See 
##   the License for the specific language governing 
##   permissions and limitations under the License. 
##----------------------------------------------------------------------

#
# Simulator-Specific test running script
#
# Run the UVM testcase in the specified directory,
# echoes the name of the test and a simple pass/fail status
# and return 0 if succesful.
#

sub usage {

print STDERR <<USAGE;
Usage: $0 [options] dir

   dir      Name of the directory containing the UVM testcase

Options:
   -c       Do not run. Only clean-up tool-generated files.
   -d       Do not remove tool-generated files
   -h       Print this message
   -u dir   Use the UVM distribution in the specified directory
   -v       Display the output of the testcase on stdout

USAGE
   exit(1);
}

$toolname = "vcs";

require "getopts.pl"
&Getopts("cdhu:v");
&usage if $opt_h || $#ARGV != 0;

$testdir = shift(@ARGV);

$uvm_home = "../distrib";
$uvm_home = $opt_u if $opt_u;

$sv  = "$testdir/test.sv";
$log = "$testdir/$toolname.log";

$| = 1;
print "$testdir... ";

if (! -d $testdir) {
   print "**FAIL** ($testdir not exist)\n";
   exit(1);
}
if (! -e $sv) {
   print "**FAIL** ($sv does not exist)\n";
   exit(1);
}

if (!$opt_c) {
  if (-e $log) {
    if (!unlink($log)) {
      print "**FAIL** (Unable to delete $log)\n";
      exit(1);
    }
  }

  print "<running>\n" if $opt_v;

  #
  # START OF TOOL-SPECIFIC SECTION
  #

  $vcs = "vcs -R -sverilog -timescale=1ns/1ns +incdir+$uvm_home/src $uvm_home/src/uvm_pkg.sv test.sv +UVM_TESTNAME=test -l vcs.log";
  $vcs .= " > /dev/null 2>&1" unless $opt_v;

  system("cd $testdir; $vcs");

  #
  # END OF TOOL-SPECIFIC SECTION
  #

  print "$testdir... " if $opt_v;
}  
 

#
# Clean up all temporary files, except the log file
#
if (!$opt_d) {
  #
  # START OF TOOL-SPECIFIC SECTION
  #

  system("cd $testdir; rm -rf simv* csrc ucli.* vc_hdrs.h");
  
  #
  # END OF TOOL-SPECIFIC SECTION
  #
  
  if ($opt_c) {
    print "vcs clean.\n";
    exit(0);
  }
}

  
#
# Check the log file to see if the test passes
#
if (!open(LOG, "<$log")) {
  print "**FAIL** (cannot read $log)\n";
  exit(1);
}
$pass = 0;
while ($_ = <LOG>) {
  if (m/TEST PASS/) {
    $pass = 1;
    last;   
  }
}
close(LOG);
  
if ($pass) {
  print "pass.\n";
  exit(0);
}

print "**FAIL**\n";
exit (1);
