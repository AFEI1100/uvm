eval 'exec perl -S $0 ${1+"$@"}' 
if 0;

##---------------------------------------------------------------------- 
##   Copyright 2010 Synopsys, Inc. 
##   All Rights Reserved Worldwide 
## 
##   Licensed under the Apache License, Version 2.0 (the 
##   "License"); you may not use this file except in 
##   compliance with the License.  You may obtain a copy of 
##   the License at 
## 
##       http://www.apache.org/licenses/LICENSE-2.0 
## 
##   Unless required by applicable law or agreed to in 
##   writing, software distributed under the License is 
##   distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR 
##   CONDITIONS OF ANY KIND, either express or implied.  See 
##   the License for the specific language governing 
##   permissions and limitations under the License. 
##----------------------------------------------------------------------

#
# Run and summarize a set of tests
#

sub usage {

print STDERR <<USAGE;
Usage: $0 [options] tool {dir}

   tool     Name of the tool to run the tests on
   dir      Name of the directies containing the UVM testcases

Options:
   -c       Do not run. Only clean-up tool-generated files.
   -d       Do not remove tool-generated files
   -h       Print this message
   -u dir   Use the UVM distribution in the specified directory
   -v       Display the output of the testcase on stdout

USAGE
   exit(1);
}

$toolname = "echo";

require "getopts.pl"
&Getopts("cdhu:v");
&usage if $opt_h || $#ARGV < 0;

$uvm_home = "../distrib";
$uvm_home = $opt_u if $opt_u;

$tool = shift(@ARGV);
$scr = $0;
$scr =~ s/run_tests/run_test.$tool/;
if (! -e $scr) {
   print STDERR "Unable to run using \"$tool\": $scr does not exists.\n";
   exit(1);
}

#
# Build the command-line for the run_test.<tool> script
#
$opts = "";
$opts .= " -c" if $opt_c;
$opts .= " -d" if $opt_d;
$opts .= " -u $opt_u" if $opt_u;
$opts .= " -v" if $opt_v;

#
# Find all of the test directories in the supplied arguments
#
if ($#ARGV = -1) {
   @ARGV = <[0-9][0-9]*>;
}
foreach $dir (@ARGV) {
  if (! -d $dir) {
    print STDERR "test directory \"$dir\" does not exist.\n";
    exit(1);
  }

  @subs = <$dir/[0-9][0-9]*>;
  if ($#subs == -1) {
    push(@dirs, $dir);
    next;
  }

  push(@dirs, @subs);
}


#
# Run the individual tests
#
$rc = 0;
foreach $dir (@dirs) {
   $cmd = "$scr $opts $dir";
   print "$cmd\n" if $opt_v;
   $rc |= system($cmd);
}
exit($rc);
